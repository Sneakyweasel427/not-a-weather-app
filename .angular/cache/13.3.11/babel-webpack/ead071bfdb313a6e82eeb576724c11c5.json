{"ast":null,"code":"import { lastValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/weather.service\";\nimport * as i2 from \"@angular/common\";\n\nfunction YesterdaysWeatherComponent_div_0_div_61_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30)(1, \"div\", 13)(2, \"div\", 31);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"img\", 14);\n    i0.ɵɵelementStart(5, \"span\", 15);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"span\", 16);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 32);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 22);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 23);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const hour_r2 = ctx.$implicit;\n    const index_r3 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", index_r3, \":00 \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", hour_r2.condition.icon, i0.ɵɵsanitizeUrl);\n    i0.ɵɵpropertyInterpolate(\"alt\", hour_r2.condition.text);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.yesterdaysWeather.forecast.forecastday[0].day.condition.text, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.tempUnit === \"c\" ? hour_r2.temp_c : hour_r2.temp_f, \"\\u00B0 \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Feels Like: \", ctx_r1.tempUnit === \"c\" ? hour_r2.feelslike_c : hour_r2.feelslike_f, \"\\u00B0 \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Precipitation: \", ctx_r1.measurementUnit === \"metric\" ? hour_r2.precip_mm + \" mm\" : hour_r2.precip_in + \" in\", \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" Wind: \", ctx_r1.measurementUnit === \"metric\" ? hour_r2.wind_kph + \" kph\" : hour_r2.wind_mph + \"mph\", \" \", hour_r2.wind_dir, \" \");\n  }\n}\n\nfunction YesterdaysWeatherComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"div\", 3);\n    i0.ɵɵelement(3, \"div\", 4);\n    i0.ɵɵelementStart(4, \"div\", 5)(5, \"div\", 6)(6, \"span\", 7);\n    i0.ɵɵlistener(\"click\", function YesterdaysWeatherComponent_div_0_Template_span_click_6_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onTempUnitChange(\"c\");\n    });\n    i0.ɵɵtext(7, \"Celsius\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \" / \");\n    i0.ɵɵelementStart(9, \"span\", 7);\n    i0.ɵɵlistener(\"click\", function YesterdaysWeatherComponent_div_0_Template_span_click_9_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.onTempUnitChange(\"f\");\n    });\n    i0.ɵɵtext(10, \"Fahrenheit\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"div\")(12, \"span\", 7);\n    i0.ɵɵlistener(\"click\", function YesterdaysWeatherComponent_div_0_Template_span_click_12_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.onMeasurementUnitChange(\"metric\");\n    });\n    i0.ɵɵtext(13, \"Metric\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \" / \");\n    i0.ɵɵelementStart(15, \"span\", 7);\n    i0.ɵɵlistener(\"click\", function YesterdaysWeatherComponent_div_0_Template_span_click_15_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.onMeasurementUnitChange(\"empirical\");\n    });\n    i0.ɵɵtext(16, \"Empirical\");\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementStart(17, \"div\", 8)(18, \"div\", 9)(19, \"div\", 10)(20, \"div\", 11);\n    i0.ɵɵtext(21, \" Yesterday's Weather for \");\n    i0.ɵɵelementStart(22, \"div\");\n    i0.ɵɵtext(23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"div\");\n    i0.ɵɵtext(25);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(26, \"div\", 12);\n    i0.ɵɵtext(27);\n    i0.ɵɵpipe(28, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"div\", 13);\n    i0.ɵɵelement(30, \"img\", 14);\n    i0.ɵɵelementStart(31, \"div\", 15);\n    i0.ɵɵtext(32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(33, \"div\", 16);\n    i0.ɵɵtext(34);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(35, \"div\", 17)(36, \"div\", 18)(37, \"span\");\n    i0.ɵɵtext(38, \"Min Temp: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(39, \"span\");\n    i0.ɵɵtext(40);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(41, \"div\", 19)(42, \"span\");\n    i0.ɵɵtext(43, \"Max Temp: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(44, \"span\");\n    i0.ɵɵtext(45);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(46, \"div\", 20)(47, \"div\", 21);\n    i0.ɵɵtext(48);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(49, \"div\", 22);\n    i0.ɵɵtext(50);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(51, \"div\", 23);\n    i0.ɵɵtext(52);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(53, \"div\", 24);\n    i0.ɵɵtext(54);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(55, \"div\", 25)(56, \"div\", 26);\n    i0.ɵɵtext(57);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(58, \"div\", 27);\n    i0.ɵɵtext(59);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(60, \"div\", 28);\n    i0.ɵɵtemplate(61, YesterdaysWeatherComponent_div_0_div_61_Template, 15, 9, \"div\", 29);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵclassMapInterpolate1(\"cursor-pointer \", ctx_r0.tempUnit === \"c\" ? \"selected\" : \"\", \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵclassMapInterpolate1(\"cursor-pointer \", ctx_r0.tempUnit === \"f\" ? \"selected\" : \"\", \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵclassMapInterpolate1(\"cursor-pointer \", ctx_r0.measurementUnit === \"metric\" ? \"selected\" : \"\", \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵclassMapInterpolate1(\"cursor-pointer \", ctx_r0.measurementUnit === \"empirical\" ? \"selected\" : \"\", \"\");\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate(ctx_r0.yesterdaysWeather.location.name + \", \" + ctx_r0.yesterdaysWeather.location.region);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.yesterdaysWeather.location.country);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(28, 28, ctx_r0.yesterdaysWeather.forecast.forecastday[0].date_epoch * 1000, \"MMMM dd, yyyy\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"src\", ctx_r0.yesterdaysWeather.forecast.forecastday[0].day.condition.icon, i0.ɵɵsanitizeUrl);\n    i0.ɵɵpropertyInterpolate(\"alt\", ctx_r0.yesterdaysWeather.forecast.forecastday[0].day.condition.text);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.yesterdaysWeather.forecast.forecastday[0].day.condition.text, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.tempUnit === \"c\" ? ctx_r0.yesterdaysWeather.forecast.forecastday[0].day.avgtemp_c : ctx_r0.yesterdaysWeather.forecast.forecastday[0].day.avgtemp_f, \"\\u00B0 \");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r0.tempUnit === \"c\" ? ctx_r0.yesterdaysWeather.forecast.forecastday[0].day.mintemp_c : ctx_r0.yesterdaysWeather.forecast.forecastday[0].day.mintemp_f, \"\\u00B0\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r0.tempUnit === \"c\" ? ctx_r0.yesterdaysWeather.forecast.forecastday[0].day.maxtemp_c : ctx_r0.yesterdaysWeather.forecast.forecastday[0].day.maxtemp_f, \"\\u00B0\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" Humidity: \", ctx_r0.yesterdaysWeather.forecast.forecastday[0].day.avghumidity, \"% \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Precipitation: \", ctx_r0.measurementUnit === \"metric\" ? ctx_r0.yesterdaysWeather.forecast.forecastday[0].day.totalprecip_mm + \" mm\" : ctx_r0.yesterdaysWeather.forecast.forecastday[0].day.totalprecip_in + \" in\", \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Max Wind Speed: \", ctx_r0.measurementUnit === \"metric\" ? ctx_r0.yesterdaysWeather.forecast.forecastday[0].day.maxwind_kph + \" kph\" : ctx_r0.yesterdaysWeather.forecast.forecastday[0].day.maxwind_mph + \" mph\", \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Average Visibility: \", ctx_r0.measurementUnit === \"metric\" ? ctx_r0.yesterdaysWeather.forecast.forecastday[0].day.avgvis_km + \" km\" : ctx_r0.yesterdaysWeather.forecast.forecastday[0].day.avgvis_miles + \" miles\", \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" Sunrise: \", ctx_r0.yesterdaysWeather.forecast.forecastday[0].astro.sunrise, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Sunrise: \", ctx_r0.yesterdaysWeather.forecast.forecastday[0].astro.sunset, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.yesterdaysWeather.forecast.forecastday[0].hour);\n  }\n}\n\nexport let YesterdaysWeatherComponent = /*#__PURE__*/(() => {\n  class YesterdaysWeatherComponent {\n    constructor(weatherService, datePipe) {\n      this.weatherService = weatherService;\n      this.datePipe = datePipe;\n      this.loading = true;\n    }\n\n    ngOnInit() {\n      lastValueFrom(this.weatherService.getUserData()).then(userData => {\n        this.userData = userData;\n\n        if (this.userData.country_code === 'US') {\n          this.tempUnit = 'f';\n          this.measurementUnit = 'empirical';\n        } else {\n          this.tempUnit = 'c';\n          this.measurementUnit = 'metric';\n        }\n\n        const today = new Date(this.userData.localtime_epoch * 1000);\n        console.log(today);\n        let yesterday = today.setDate(today.getDate() - 1);\n        yesterday = this.datePipe.transform(yesterday, 'yyyy-MM-dd');\n        console.log(yesterday);\n        lastValueFrom(this.weatherService.getYesterdaysWeather(this.userData, yesterday)).then(res => {\n          this.yesterdaysWeather = res;\n          console.log(this.yesterdaysWeather);\n        }).catch(error => {\n          console.error(error ? error.error.error.code + ' - ' + error.error.error.message : 'Weather data unavailable');\n        }).finally(() => this.loading = false);\n      }).catch(error => console.error(error ? error.error.error.code + ' - ' + error.error.error.message : 'User location data unavailable'));\n    }\n\n    onTempUnitChange(unit) {\n      this.tempUnit = unit;\n    }\n\n    onMeasurementUnitChange(unit) {\n      this.measurementUnit = unit;\n    }\n\n  }\n\n  YesterdaysWeatherComponent.ɵfac = function YesterdaysWeatherComponent_Factory(t) {\n    return new (t || YesterdaysWeatherComponent)(i0.ɵɵdirectiveInject(i1.WeatherService), i0.ɵɵdirectiveInject(i2.DatePipe));\n  };\n\n  YesterdaysWeatherComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: YesterdaysWeatherComponent,\n    selectors: [[\"app-yesterdays-weather\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"\", 4, \"ngIf\"], [1, \"\"], [1, \"options\", \"p-4\"], [1, \"container\"], [1, \"search\"], [1, \"units\"], [1, \"pb-2\"], [3, \"click\"], [1, \"main\", \"container\", \"py-5\"], [1, \"row\"], [1, \"col-12\", \"justify-content-center\"], [1, \"location\"], [1, \"date\"], [1, \"condition\"], [1, \"icon\", 3, \"src\", \"alt\"], [1, \"condition-text\"], [1, \"avgtemp\"], [1, \"temps\"], [1, \"min\"], [1, \"max\"], [1, \"details\"], [1, \"humidity\"], [1, \"precip\"], [1, \"wind\"], [1, \"vis\"], [1, \"daylight\"], [1, \"sunrise\"], [1, \"sunset\"], [1, \"hourly\"], [\"class\", \"hour\", 4, \"ngFor\", \"ngForOf\"], [1, \"hour\"], [1, \"time\"], [1, \"feelslike\"]],\n    template: function YesterdaysWeatherComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, YesterdaysWeatherComponent_div_0_Template, 62, 31, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n      }\n    },\n    directives: [i2.NgIf, i2.NgForOf],\n    pipes: [i2.DatePipe],\n    styles: [\".options[_ngcontent-%COMP%]{width:100%;background-color:#00008b;color:#fff}.options[_ngcontent-%COMP%]   .units[_ngcontent-%COMP%]   .selected[_ngcontent-%COMP%]{font-weight:700;color:#e6726a}\"]\n  });\n  return YesterdaysWeatherComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}