{"ast":null,"code":"import { lastValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/weather.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\n\nfunction YesterdaysWeatherComponent_div_0_div_86_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 38)(1, \"div\", 39)(2, \"div\", 40);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"img\", 41);\n    i0.ɵɵelementStart(5, \"div\", 42);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 43);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 44);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 45);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 46);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const hour_r3 = ctx.$implicit;\n    const index_r4 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", index_r4, \":00 \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", hour_r3.condition.icon, i0.ɵɵsanitizeUrl);\n    i0.ɵɵpropertyInterpolate(\"alt\", hour_r3.condition.text);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.yesterdaysWeather.forecast.forecastday[0].day.condition.text, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.tempUnit === \"c\" ? hour_r3.temp_c : hour_r3.temp_f, \"\\u00B0 \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Feels Like: \", ctx_r2.tempUnit === \"c\" ? hour_r3.feelslike_c : hour_r3.feelslike_f, \"\\u00B0 \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Precipitation: \", ctx_r2.measurementUnit === \"metric\" ? hour_r3.precip_mm + \" mm\" : hour_r3.precip_in + \" in\", \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" Wind: \", ctx_r2.measurementUnit === \"metric\" ? hour_r3.wind_kph + \" kph\" : hour_r3.wind_mph + \"mph\", \" \", hour_r3.wind_dir, \" \");\n  }\n}\n\nfunction YesterdaysWeatherComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"div\", 3)(3, \"div\", 4)(4, \"mat-form-field\", 5)(5, \"mat-label\");\n    i0.ɵɵtext(6, \"City Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"input\", 6, 7);\n    i0.ɵɵlistener(\"keyup.enter\", function YesterdaysWeatherComponent_div_0_Template_input_keyup_enter_7_listener() {\n      i0.ɵɵrestoreView(_r6);\n\n      const _r1 = i0.ɵɵreference(8);\n\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.searchNewLocation(_r1.value);\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"div\", 8)(10, \"div\", 9)(11, \"span\", 10);\n    i0.ɵɵlistener(\"click\", function YesterdaysWeatherComponent_div_0_Template_span_click_11_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.onTempUnitChange(\"c\");\n    });\n    i0.ɵɵtext(12, \"Celsius\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(13, \" / \");\n    i0.ɵɵelementStart(14, \"span\", 10);\n    i0.ɵɵlistener(\"click\", function YesterdaysWeatherComponent_div_0_Template_span_click_14_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.onTempUnitChange(\"f\");\n    });\n    i0.ɵɵtext(15, \"Fahrenheit\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"div\")(17, \"span\", 10);\n    i0.ɵɵlistener(\"click\", function YesterdaysWeatherComponent_div_0_Template_span_click_17_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.onMeasurementUnitChange(\"metric\");\n    });\n    i0.ɵɵtext(18, \"Metric\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(19, \" / \");\n    i0.ɵɵelementStart(20, \"span\", 10);\n    i0.ɵɵlistener(\"click\", function YesterdaysWeatherComponent_div_0_Template_span_click_20_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.onMeasurementUnitChange(\"empirical\");\n    });\n    i0.ɵɵtext(21, \"Empirical\");\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementStart(22, \"div\", 11)(23, \"div\", 12)(24, \"div\", 13)(25, \"div\", 14)(26, \"div\", 15);\n    i0.ɵɵtext(27, \"Yesterday's Weather for\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"div\", 16);\n    i0.ɵɵtext(29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"div\", 16);\n    i0.ɵɵtext(31);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(32, \"div\", 17);\n    i0.ɵɵtext(33);\n    i0.ɵɵpipe(34, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"div\", 18);\n    i0.ɵɵelement(36, \"img\", 19);\n    i0.ɵɵelementStart(37, \"div\", 20);\n    i0.ɵɵtext(38);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(39, \"div\", 21);\n    i0.ɵɵtext(40);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(41, \"div\", 22)(42, \"div\", 23)(43, \"div\", 24)(44, \"span\", 25);\n    i0.ɵɵtext(45, \"Min Temp: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(46, \"span\", 26);\n    i0.ɵɵtext(47);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(48, \"div\", 27)(49, \"span\", 25);\n    i0.ɵɵtext(50, \"Max Temp: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(51, \"span\", 26);\n    i0.ɵɵtext(52);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(53, \"div\", 28)(54, \"span\", 25);\n    i0.ɵɵtext(55, \"Humidity: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(56, \"span\", 26);\n    i0.ɵɵtext(57);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(58, \"div\", 29)(59, \"span\", 25);\n    i0.ɵɵtext(60, \"Precipitation: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(61, \"span\", 26);\n    i0.ɵɵtext(62);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(63, \"div\", 30)(64, \"div\", 31)(65, \"span\", 25);\n    i0.ɵɵtext(66, \"Max Wind Speed:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(67, \"span\", 26);\n    i0.ɵɵtext(68);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(69, \"div\", 32)(70, \"span\", 25);\n    i0.ɵɵtext(71, \"Average Visibility: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(72, \"span\", 26);\n    i0.ɵɵtext(73);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(74, \"div\", 33)(75, \"span\", 25);\n    i0.ɵɵtext(76, \"Sunrise: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(77, \"span\", 26);\n    i0.ɵɵtext(78);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(79, \"div\", 34)(80, \"span\", 25);\n    i0.ɵɵtext(81, \"Sunrise: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(82, \"span\", 26);\n    i0.ɵɵtext(83);\n    i0.ɵɵelementEnd()()()()()()();\n    i0.ɵɵelementStart(84, \"div\", 35)(85, \"div\", 36);\n    i0.ɵɵtemplate(86, YesterdaysWeatherComponent_div_0_div_86_Template, 15, 9, \"div\", 37);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.searchForm);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"value\", ctx_r0.searchForm.get(\"city\").value);\n    i0.ɵɵadvance(4);\n    i0.ɵɵclassMapInterpolate1(\"cursor-pointer \", ctx_r0.tempUnit === \"c\" ? \"selected\" : \"\", \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵclassMapInterpolate1(\"cursor-pointer \", ctx_r0.tempUnit === \"f\" ? \"selected\" : \"\", \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵclassMapInterpolate1(\"cursor-pointer \", ctx_r0.measurementUnit === \"metric\" ? \"selected\" : \"\", \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵclassMapInterpolate1(\"cursor-pointer \", ctx_r0.measurementUnit === \"empirical\" ? \"selected\" : \"\", \"\");\n    i0.ɵɵadvance(9);\n    i0.ɵɵtextInterpolate(ctx_r0.yesterdaysWeather.location.name + \", \" + ctx_r0.yesterdaysWeather.location.region);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.yesterdaysWeather.location.country);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(34, 30, ctx_r0.yesterdaysWeather.forecast.forecastday[0].date_epoch * 1000, \"MMMM dd, yyyy\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"src\", ctx_r0.yesterdaysWeather.forecast.forecastday[0].day.condition.icon, i0.ɵɵsanitizeUrl);\n    i0.ɵɵpropertyInterpolate(\"alt\", ctx_r0.yesterdaysWeather.forecast.forecastday[0].day.condition.text);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.yesterdaysWeather.forecast.forecastday[0].day.condition.text, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.tempUnit === \"c\" ? ctx_r0.yesterdaysWeather.forecast.forecastday[0].day.avgtemp_c : ctx_r0.yesterdaysWeather.forecast.forecastday[0].day.avgtemp_f, \"\\u00B0 \");\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r0.tempUnit === \"c\" ? ctx_r0.yesterdaysWeather.forecast.forecastday[0].day.mintemp_c : ctx_r0.yesterdaysWeather.forecast.forecastday[0].day.mintemp_f, \"\\u00B0\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r0.tempUnit === \"c\" ? ctx_r0.yesterdaysWeather.forecast.forecastday[0].day.maxtemp_c : ctx_r0.yesterdaysWeather.forecast.forecastday[0].day.maxtemp_f, \"\\u00B0\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r0.yesterdaysWeather.forecast.forecastday[0].day.avghumidity, \"%\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.measurementUnit === \"metric\" ? ctx_r0.yesterdaysWeather.forecast.forecastday[0].day.totalprecip_mm + \" mm\" : ctx_r0.yesterdaysWeather.forecast.forecastday[0].day.totalprecip_in + \" in\");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r0.measurementUnit === \"metric\" ? ctx_r0.yesterdaysWeather.forecast.forecastday[0].day.maxwind_kph + \" kph\" : ctx_r0.yesterdaysWeather.forecast.forecastday[0].day.maxwind_mph + \" mph\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.measurementUnit === \"metric\" ? ctx_r0.yesterdaysWeather.forecast.forecastday[0].day.avgvis_km + \" km\" : ctx_r0.yesterdaysWeather.forecast.forecastday[0].day.avgvis_miles + \" miles\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.yesterdaysWeather.forecast.forecastday[0].astro.sunrise);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.yesterdaysWeather.forecast.forecastday[0].astro.sunset);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.yesterdaysWeather.forecast.forecastday[0].hour);\n  }\n}\n\nexport let YesterdaysWeatherComponent = /*#__PURE__*/(() => {\n  class YesterdaysWeatherComponent {\n    constructor(weatherService, datePipe, fb) {\n      this.weatherService = weatherService;\n      this.datePipe = datePipe;\n      this.fb = fb;\n      this.loading = true;\n    }\n\n    ngOnInit() {\n      this.searchForm = this.fb.group({\n        city: ['']\n      });\n      lastValueFrom(this.weatherService.getUserData()).then(userData => {\n        this.userData = userData;\n\n        if (this.userData.country_code === 'US') {\n          this.tempUnit = 'f';\n          this.measurementUnit = 'empirical';\n        } else {\n          this.tempUnit = 'c';\n          this.measurementUnit = 'metric';\n        }\n\n        const today = new Date(this.userData.localtime_epoch * 1000);\n        const yesterday = today.setDate(today.getDate() - 1);\n        this.yesterday = this.datePipe.transform(yesterday, 'yyyy-MM-dd');\n        lastValueFrom(this.weatherService.getYesterdaysWeather(this.userData.city, this.yesterday)).then(res => {\n          this.yesterdaysWeather = res;\n          console.log(this.yesterdaysWeather);\n        }).catch(error => {\n          console.error(error ? error.error.error.code + ' - ' + error.error.error.message : 'Weather data unavailable');\n        }).finally(() => this.loading = false);\n      }).catch(error => console.error(error ? error.error.error.code + ' - ' + error.error.error.message : 'User location data unavailable'));\n    }\n\n    onTempUnitChange(unit) {\n      this.tempUnit = unit;\n    }\n\n    onMeasurementUnitChange(unit) {\n      this.measurementUnit = unit;\n    }\n\n    searchNewLocation(value) {\n      this.searching = true;\n      this.searchForm.get('city').disable();\n      lastValueFrom(this.weatherService.getYesterdaysWeather(value, this.yesterday)).then(res => {\n        this.yesterdaysWeather = res;\n        console.log(this.yesterdaysWeather);\n      }).catch(error => {\n        console.error(error ? error.error.error.code + ' - ' + error.error.error.message : 'Weather data unavailable');\n      }).finally(() => {\n        this.searchForm.get('city').setValue('');\n        this.searchForm.get('city').enable();\n        this.searching = false;\n      });\n    }\n\n  }\n\n  YesterdaysWeatherComponent.ɵfac = function YesterdaysWeatherComponent_Factory(t) {\n    return new (t || YesterdaysWeatherComponent)(i0.ɵɵdirectiveInject(i1.WeatherService), i0.ɵɵdirectiveInject(i2.DatePipe), i0.ɵɵdirectiveInject(i3.FormBuilder));\n  };\n\n  YesterdaysWeatherComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: YesterdaysWeatherComponent,\n    selectors: [[\"app-yesterdays-weather\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"\", 4, \"ngIf\"], [1, \"\"], [1, \"options\", \"p-4\"], [1, \"container\"], [1, \"search\", 3, \"formGroup\"], [1, \"w-100\"], [\"matInput\", \"\", 3, \"value\", \"keyup.enter\"], [\"searchInput\", \"\"], [1, \"units\"], [1, \"pb-2\"], [3, \"click\"], [1, \"main\", \"container\", \"py-5\", \"text-center\"], [1, \"row\", \"pb-3\"], [1, \"col-12\"], [1, \"location\", \"pb-3\"], [1, \"fs-20\", \"pb-2\"], [1, \"fs-24\"], [1, \"date\", \"fs-20\"], [1, \"condition\", \"py-3\"], [1, \"icon\", 3, \"src\", \"alt\"], [1, \"condition-text\", \"fs-20\"], [1, \"avgtemp\", \"fs-22\"], [1, \"details\", \"d-flex\", \"justify-content-center\"], [1, \"left\", \"pr-3\"], [1, \"min\", \"pb-1\", \"d-flex\", \"justify-content-between\"], [1, \"d-block\", \"label\"], [1, \"d-block\", \"value\"], [1, \"max\", \"pb-1\", \"d-flex\", \"justify-content-between\"], [1, \"humidity\", \"pb-1\", \"d-flex\", \"justify-content-between\"], [1, \"precip\", \"pb-1\", \"d-flex\", \"justify-content-between\"], [1, \"right\", \"pl-3\"], [1, \"wind\", \"pb-1\", \"d-flex\", \"justify-content-between\"], [1, \"vis\", \"pb-1\", \"d-flex\", \"justify-content-between\"], [1, \"sunrise\", \"pb-1\", \"d-flex\", \"justify-content-between\"], [1, \"sunset\", \"d-flex\", \"justify-content-between\"], [1, \"hourly-container\", \"mx-5\", \"py-5\"], [1, \"hourly\", \"d-flex\", \"py-3\"], [\"class\", \"hour px-15 py-15 text-center\", 4, \"ngFor\", \"ngForOf\"], [1, \"hour\", \"px-15\", \"py-15\", \"text-center\"], [1, \"condition\"], [1, \"time\", \"font-weight-bold\", \"fs-18\"], [1, \"icon\", \"d-block\", \"mx-auto\", 3, \"src\", \"alt\"], [1, \"condition-text\", \"fs-18\"], [1, \"avgtemp\", \"fs-20\", \"pb-15\"], [1, \"feelslike\"], [1, \"precip\"], [1, \"wind\"]],\n    template: function YesterdaysWeatherComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, YesterdaysWeatherComponent_div_0_Template, 87, 33, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n      }\n    },\n    directives: [i2.NgIf, i3.NgControlStatusGroup, i3.FormGroupDirective, i4.MatFormField, i4.MatLabel, i5.MatInput, i2.NgForOf],\n    pipes: [i2.DatePipe],\n    styles: [\".options[_ngcontent-%COMP%]{width:100%;background-color:#00008b;color:#fff}.options[_ngcontent-%COMP%]   .units[_ngcontent-%COMP%]   .selected[_ngcontent-%COMP%]{font-weight:700;color:#e6726a}.main[_ngcontent-%COMP%]   .condition[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%]{width:100px}.main[_ngcontent-%COMP%]   .details[_ngcontent-%COMP%]   .left[_ngcontent-%COMP%], .main[_ngcontent-%COMP%]   .details[_ngcontent-%COMP%]   .right[_ngcontent-%COMP%]{min-width:250px;max-width:100%}.hourly-container[_ngcontent-%COMP%]{overflow:hidden}.hourly-container[_ngcontent-%COMP%]   .hourly[_ngcontent-%COMP%]{overflow-x:auto}.hourly-container[_ngcontent-%COMP%]   .hourly[_ngcontent-%COMP%]   .hour[_ngcontent-%COMP%]{flex:0 0 15%;background-color:#ddd;margin-left:7px;margin-right:7px}\"]\n  });\n  return YesterdaysWeatherComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}